version: '3.8'

services:
  rocketchat:
    image: rocketchat/rocket.chat:latest
    restart: unless-stopped
    environment:
      MONGO_URL: mongodb://mongo:27017/rocketchat?replicaSet=rs0
      MONGO_OPLOG_URL: mongodb://mongo:27017/local?replicaSet=rs0
      ROOT_URL: https://everjust.chat
      PORT: 3000
      DEPLOY_METHOD: docker
      # Uploads storage configuration
      OVERWRITE_SETTING_FileUpload_Storage_Type: FileSystem
      OVERWRITE_SETTING_FileUpload_FileSystemPath: /app/uploads
      # Performance settings
      NODE_ENV: production
      # SendGrid Email Configuration (port 2525 to bypass DigitalOcean blocks)
      MAIL_URL: smtp://apikey:${SENDGRID_API_KEY}@smtp.sendgrid.net:2525
      OVERWRITE_SETTING_From_Email: support@everjust.com
      # Ensure invitation links use the correct domain
      OVERWRITE_SETTING_Accounts_EmailVerification: "true"
      # EVERJUST: Disable enterprise restrictions and promotional banners
      OVERWRITE_SETTING_Show_Setup_Wizard: "completed"
      OVERWRITE_SETTING_Site_Name: "EVERJUST Chat"
      OVERWRITE_SETTING_Site_Url: "https://everjust.chat"
      OVERWRITE_SETTING_Register_Server: "false"
      OVERWRITE_SETTING_Cloud_Service_Agree_PrivacyTerms: "true"
      OVERWRITE_SETTING_Statistics_reporting: "false"
      OVERWRITE_SETTING_Send_Statistics_ToRocketChat: "false"
      OVERWRITE_SETTING_Apps_Framework_enabled: "true"
      OVERWRITE_SETTING_Apps_Framework_Development_Mode: "true"
      # Bypass enterprise license restrictions for layout customization
      OVERWRITE_SETTING_Enterprise_License: "true"
      OVERWRITE_SETTING_Cloud_Workspace_Id: ""
      OVERWRITE_SETTING_Cloud_Workspace_Client_Id: ""
      OVERWRITE_SETTING_Cloud_Workspace_Client_Secret: ""
      OVERWRITE_SETTING_Cloud_Workspace_Registration_Client_Uri: ""
      # Enable premium layout features
      OVERWRITE_SETTING_Layout_Login_Hide_Logo: "true"
      OVERWRITE_SETTING_Layout_Login_Hide_Title: "true" 
      OVERWRITE_SETTING_Layout_Login_Hide_Powered_By: "true"
      OVERWRITE_SETTING_Layout_Login_Template: "horizontal"
      # Enhanced file upload settings
      OVERWRITE_SETTING_Message_MaxAllowedSize: "5000"
      OVERWRITE_SETTING_FileUpload_MaxFileSize: "104857600"
      # Custom branding - remove Rocket.Chat footer
      OVERWRITE_SETTING_Layout_Sidenav_Footer: ""
      OVERWRITE_SETTING_Assets_SvgFavicon_Enable: "true"
      # Enable Jitsi conference calling (free alternative to premium VoIP)
      OVERWRITE_SETTING_Jitsi_Enabled: "true"
      OVERWRITE_SETTING_Jitsi_Domain: "meet.everjust.com"
      OVERWRITE_SETTING_Jitsi_URL_Room_Prefix: "EverJust"
      OVERWRITE_SETTING_Jitsi_Open_New_Window: "false"
      OVERWRITE_SETTING_Jitsi_Enable_Channels: "true"
      OVERWRITE_SETTING_Jitsi_Chrome_Extension: ""
      OVERWRITE_SETTING_Jitsi_SSL: "true"
      OVERWRITE_SETTING_Jitsi_Prefer_H264: "true"
      # Set Jitsi as default conference provider
      OVERWRITE_SETTING_VideoConf_Default_Provider: "jitsi"
      # Completely disable premium VoIP/Omnichannel calling
      OVERWRITE_SETTING_VoIP_Enabled: "false"
      OVERWRITE_SETTING_VoIP_Management_Server_Host: ""
      OVERWRITE_SETTING_Omnichannel_VoIP_Enabled: "false"
      # Enable conference calling in all contexts
      OVERWRITE_SETTING_VideoConf_Enable_DMs: "true"
      OVERWRITE_SETTING_VideoConf_Enable_Channels: "true"
      OVERWRITE_SETTING_VideoConf_Enable_Teams: "true"
      # Disable WebRTC (deprecated) and force Jitsi
      OVERWRITE_SETTING_WebRTC_Enabled: "false"
      OVERWRITE_SETTING_WebRTC_Enable_Channel: "false"
      OVERWRITE_SETTING_WebRTC_Enable_Private: "false"
      OVERWRITE_SETTING_WebRTC_Enable_Direct: "false"
    depends_on:
      mongo:
        condition: service_healthy
    ports:
      - "3000:3000"
    volumes:
      - ./uploads:/app/uploads
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:3000/api/info"]
      interval: 30s
      timeout: 10s
      retries: 5
      start_period: 60s

  mongo:
    image: mongo:7.0
    restart: unless-stopped
    command: mongod --oplogSize 128 --replSet rs0 --storageEngine=wiredTiger
    volumes:
      - ./data/db:/data/db
      - ./data/dump:/dump
    environment:
      MONGO_INITDB_DATABASE: rocketchat
    healthcheck:
      test: echo 'db.runCommand("ping").ok' | mongosh localhost:27017/test --quiet
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 30s

  mongo-init-replica:
    image: mongo:7.0
    command: >
      bash -c "
        # Wait for MongoDB to be ready
        until mongosh --host mongo:27017 --eval 'print(\"waited for connection\")'; do
          echo 'Waiting for MongoDB to be available...'
          sleep 5
        done

        # Check if replica set is already initialized
        if mongosh --host mongo:27017 --eval 'rs.status()' | grep -q 'no replset config has been received'; then
          echo 'Initializing replica set...'
          mongosh --host mongo:27017 --eval '
            rs.initiate({
              _id: \"rs0\",
              members: [{ _id: 0, host: \"mongo:27017\", priority: 1 }]
            })
          '
          echo 'Replica set initialized!'
        else
          echo 'Replica set already initialized'
        fi
      "
    depends_on:
      mongo:
        condition: service_healthy

# Optional: Backup service
  backup:
    image: mongo:7.0
    profiles: ["backup"]
    volumes:
      - ./backups:/backups
      - ./data/db:/data/db:ro
    command: >
      bash -c "
        echo 'Starting backup...'
        mongodump --host mongo:27017 --db rocketchat --archive=/backups/rocketchat-backup-$$(date +%Y%m%d-%H%M%S).archive
        echo 'Backup completed!'
        # Keep only last 7 days of backups
        find /backups -name '*.archive' -mtime +7 -delete
      "
    depends_on:
      mongo:
        condition: service_healthy

networks:
  default:
    driver: bridge
